# 로봇 청소기 문제(알고리즘 잡스 제공 문제)
# 문제 velog 링크 : 

#### 문제 파악 (1)
# 로봇 청소기가 있고,
# 그 로봇 청소기의 기능은 only 직진만 가능함(현재 보고있는 방향으로)
# 하지만 여기에 구조물 및 장애물이 있고, 그것에 따라 로봇 청소기의 직진 방향, 경로가 바뀜

# 구조물 및 장애물 종류
# 1) 1~5까지의 구조물은 마주치게되면 방향을 전환시킴
# 2) 6~10번까지의 구조물은 워프라고해서 만나면 같은 숫자로 곳으로 이동시키며(순간이동) 그곳부터 가던 방향대로 가게됨
# ** 이 때 워프를 한다음에 곧바로 다시 워프를 할 수 없음
# 3) 턱이 있는데(-1) 이 턱에 빠지면 운행 정지임

# 결과적으로 로봇을 특정 위치, 특정 방향으로 놓고 작동시킨 다음에 자유자재로 돌아다니게 하고
# 그 다음에 원래 있던 위치 및 방향으로 돌아올 때까지 몇칸을 밟고(청소하고) 돌아왔는지를 체크하며, 그 값의 최대값을 구하라는 문제
# 추가로, 턱에 위치하게 돼도 운행이 끝나므로, 그 때까지 밟은 칸도 최대값이면 정답이 될 수 있음

# 제약 조건 및 주의 사항
# 1) 구조물이 아닌 일반 벽에 부딪히면 직관적으로 뒤도는 방향으로 운행하게 된다
# 2) 워프로 이동한 뒤에 곧바로 워프를 쓸 수 없다. 예를 들어, 워프를 했는데 바로 벽이 있어서 다시 그 워프로 돌아오면 그 워프를 이용못하고 운행 중지가 되는듯!
# 3) 워프는 무조건 한쌍이기 때문에 만약에 7번이 있으면 7번은 하나 더있음(무조건)
# 4) 제자리로 돌아와서 운행이 종료되려면 반드시 그 좌표와 그 방향으로 끝나야한다 
# 5) 칸을 셀 때 구조물 1,2,3,4도 카운트를 하며 워프도 카운트를 각각 해준다(출발지, 목적지) 그러나, 중복해서 계산은 안한다.
# 예를 들어, 특정 칸을 지났다면 돌아올 때 또 밟더라도 중복 카운트 x
# 6) 출발은 구조물, 턱, 벽이 아닌 모든 곳이다. 표기상으로는 0에서만 출발할 수 있음 

#### 문제 설계 및 해결책 

# 완전탐색
# 모든 0인 부분에 대해서 동서남북의 방향으로 로봇을 출발시키는 것이다.
# N*N 행렬인데 N은 최대 100이라 했으니 10,000개의 궤적이 있을 것이고,
# 그 만개의 궤적을 최대 만개의 0에 대해서 4방향으로 출발시킬꺼니까... 
# 10000 * 10000 * 4 = 400,000,000 4억개 이상의 시행을 하게 될 것 
# 제한시간이 7초니까 충분히 가능하다

# 만든 배열에 대해서 0인 곳에서만 완전탐색을 실행한다
# 4방향으로 모두 직진시켜보는 것 
# 하나의 dot(좌표)에 대해서 동서남북(for문)으로 직진시켜본다
# 직진 시키다가 장애물을 만나면(혹은 구조물) 그 구조물에 따른 처리를 해준다(워프도 있고)
# 처리를 그렇게 계속 알아서 돌게하다가 -1(턱)을 만나거나 다시 있던 자리로 돌아오면 그 때까지 거쳐온 칸의 수(중복허용x)를 여태까지 최대값과 비교
# 이 때 주의할 사항이
# - 무한 루프를 돌게하는 구간을 어떻게 탐지할 것인가(어떤 곳에 들어갔더니 양옆에 워프 혹은 벽이 있어서 왔다 갔다 빠져나갈 수 없다면)
# - 워프 직후 또 워프가 바로 나오는 것을 어떻게 탐지할지

# 먼저 앞에서부터 주의사항을 제외하고 구현 설계해보면, 
